name: Build Node server build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash
    working-directory: ./

# To be used when the container signer stack is setup through the Terraform code in di-ipv-cri-pipeline-deployment
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     timeout-minutes: 60
#     permissions:
#       id-token: write
#       contents: read
#     steps:
#       - name: Upload to ECR and tag
#         uses: alphagov/di-devplatform-upload-action-ecr@1.0.1
#         with:
#           role-to-assume-arn: ${{ secrets.BUILD_ROLE_TO_ASSUME }}
#           container-sign-kms-key-arn: ${{ secrets.BUILD_CONTAINER_SIGN_KMS_KEY }}
#           ecr-repo-name: ${{ secrets.BUILD_ECR_REPOSITORY }}
#           artifact-bucket-name: ${{ secrets.BUILD_ARTIFACT_BUCKET }}

jobs:
  dockerBuildAndPush:
    name: Docker build and push
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-west-2
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: ${{ secrets.BUILD_ROLE_TO_ASSUME }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Login to GDS Dev Dynatrace Container Registry
        uses: docker/login-action@v3
        with:
          registry: khw46367.live.dynatrace.com
          username: khw46367
          password: ${{ secrets.DYNATRACE_PAAS_TOKEN }}

      - name: Build, tag, and push image to Amazon ECR
        env:
          BUILD_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          BUILD_ECR_REPOSITORY: ${{ secrets.BUILD_ECR_REPOSITORY }}
        run: |
          cd ${GITHUB_WORKSPACE} || exit 1
          docker build -t $BUILD_ECR_REGISTRY/$BUILD_ECR_REPOSITORY:$GITHUB_SHA .
          docker push $BUILD_ECR_REGISTRY/$BUILD_ECR_REPOSITORY:$GITHUB_SHA
      - name: SAM Validate
        run: sam validate --region ${{ env.AWS_REGION }} -t template.yaml

      - name: Update SAM template with ECR image
        env:
          BUILD_ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          BUILD_ECR_REPOSITORY: ${{ secrets.BUILD_ECR_REPOSITORY }}
        run: |
          cd ${GITHUB_WORKSPACE} || exit 1
          sed -i "s|CONTAINER-IMAGE-PLACEHOLDER|$BUILD_ECR_REGISTRY/$BUILD_ECR_REPOSITORY:$GITHUB_SHA|" template.yaml
      - name: Create template.yaml and sha zip file and upload to artifacts S3
        run: |
          cd ${GITHUB_WORKSPACE} || exit 1
          sam build -t template.yaml
          mv .aws-sam/build/template.yaml cf-template.yaml
          zip template.zip cf-template.yaml
      - name: Upload CloudFormation artifacts to S3
        env:
          ARTIFACT_BUCKET: ${{ secrets.BUILD_ARTIFACT_BUCKET }}
        run: |
          cd ${GITHUB_WORKSPACE} || exit 1
          aws s3 cp template.zip "s3://$ARTIFACT_BUCKET/template.zip" --metadata "repository=$GITHUB_REPOSITORY,commitsha=$GITHUB_SHA"
